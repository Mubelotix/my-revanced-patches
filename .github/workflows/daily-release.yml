name: Daily Patch Release

on:
  schedule:
    - cron: '40 2 * * *' # 4:40 AM Paris time
  workflow_dispatch:

jobs:
  check-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed to get all tags and commits

      - name: Get latest release tag
        id: get_release
        run: |
          latest=$(git tag --list '0.1.*' --sort=-v:refname | head -n 1)
          echo "latest_tag=$latest" >> "$GITHUB_OUTPUT"

      - name: Check for new commits
        id: check_commits
        run: |
          if [ -z "${{ steps.get_release.outputs.latest_tag }}" ]; then
            echo "new_commits=true" >> "$GITHUB_OUTPUT"
          else
            commits=$(git log ${{ steps.get_release.outputs.latest_tag }}..HEAD --oneline)
            if [ -n "$commits" ]; then
              echo "new_commits=true" >> "$GITHUB_OUTPUT"
            else
              echo "new_commits=false" >> "$GITHUB_OUTPUT"
            fi
          fi

      - name: Exit if no new commits
        if: steps.check_commits.outputs.new_commits != 'true'
        run: echo "No new commits since last release. Exiting..."

      - name: Set next patch version
        id: set_version
        if: steps.check_commits.outputs.new_commits == 'true'
        run: |
          last=${{ steps.get_release.outputs.latest_tag }}
          if [ -z "$last" ]; then
            echo "next_tag=0.1.0" >> "$GITHUB_OUTPUT"
          else
            patch=$(echo $last | awk -F. '{print $3 + 1}')
            echo "next_tag=0.1.$patch" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up Java
        if: steps.check_commits.outputs.new_commits == 'true'
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Configure GitHub Packages access
        if: steps.check_commits.outputs.new_commits == 'true'
        run: |
            mkdir -p ~/.gradle
            echo "gpr.user=${{ secrets.GPR_USER }}" >> ~/.gradle/gradle.properties
            echo "gpr.key=${{ secrets.GPR_KEY }}" >> ~/.gradle/gradle.properties

      - name: Build project
        if: steps.check_commits.outputs.new_commits == 'true'
        run: ./gradlew build

      - name: Create patches.rvp
        if: steps.check_commits.outputs.new_commits == 'true'
        run: |
          jar cf patches.jar -C patches/build/classes/kotlin/main . -C patches/build/resources/main .
          mv patches.jar patches.rvp
    
      - name: Generate changelog
        id: changelog
        if: steps.check_commits.outputs.new_commits == 'true'
        run: |
          commits=$(git log ${{ steps.get_release.outputs.latest_tag }}..HEAD --pretty=format:"- %s (%h)" --no-merges)
          echo "log<<EOF" >> $GITHUB_OUTPUT
          echo "$commits" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub release
        if: steps.check_commits.outputs.new_commits == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.set_version.outputs.next_tag }}
          name: "v${{ steps.set_version.outputs.next_tag }}"
          body: |
            📦 **Automated Patch Release** - `${{ steps.set_version.outputs.next_tag }}`

            🛠 This release was generated automatically after changes were committed on this repository.

            ### 🔄 Changes since last release:
            ${{ steps.changelog.outputs.log }}

            ✅ Built successfully and ready for use with [revanced-cli](https://github.com/ReVanced/revanced-cli/blob/main/docs/1_usage.md)
            🔁 [View workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          files: patches.rvp
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
